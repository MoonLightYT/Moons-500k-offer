local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Moons 500K Offer",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "By Godlike",
   LoadingSubtitle = "MoonHub ontop",
   Theme = "Serenity", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

Rayfield:Notify({
   Title = "Hello Again Carson",
   Content = "Welcome Back my G",
   Duration = 6.5,
   Image = "moon",
})

local TabMain = Window:CreateTab("Main", "circle-check-big")
local TabAutoWeight = Window:CreateTab("Auto Weight", "dumbbell")
local TabAutoRebirth = Window:CreateTab("Auto Rebirth", "box")
local TabAutoKill = Window:CreateTab("Auto Kill", "axe")
local TabOptools = Window:CreateTab("OP Tools", "power")
local TabMisc = Window:CreateTab("Misc", "settings")
local Tablinkedscripts = Window:CreateTab("Linked Scripts", "file")
local Tabwhitelisted = Window:CreateTab("Whitelisted users", "lock-keyhole-open")

local Section = TabMain:CreateSection("Misc V1")

local Slider = TabMain:CreateSlider({
   Name = "Size Changer",
   Range = {1, 100},
   Increment = 1,
   Suffix = "Size",
   CurrentValue = 2,
   Flag = "Size", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      _G.AutoSize = Value
      while _G.AutoSize do
         game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", Value)
         task.wait(0.1)
      end
   end
})
