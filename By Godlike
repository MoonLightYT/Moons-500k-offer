local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/memejames/elerium-v2-ui-library/main/Library", true))()

local window = library:AddWindow("Moons 500k offer", {
    main_color = Color3.fromRGB(0, 0, 0), -- Color
    min_size = Vector2.new(470, 470), -- Size of the GUI
    can_resize = false,
})

local ThankYou = window:AddTab("Thank You") -- Missing closing parenthesis
local folder = ThankYou:AddFolder("Misc shit")

folder:AddSwitch("Auto Brawl", function(State)
    autobrawl = State -- Use State instead of state
    if autobrawl then
        task.spawn(function()
            while autobrawl do -- Corrected variable reference
                game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                task.wait(0)
            end
        end)
    end
end)

folder:AddSwitch("Auto Brawl GOD", function(State)
    autobrawlgod = State -- Use State instead of state
    if autobrawlgod then
        task.spawn(function()
            while autobrawlgod do -- Corrected variable reference
                game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                task.wait(2)
            end
        end)
    end
end)

folder:AddSwitch("Fast Tools", function(State)
    fasttools = State -- Use State instead of state
    if fasttools then
        _G.FastTools = fasttools -- Changed Value to fasttools for consistency
        local defaultSpeeds = {
            {"Punch", "attackTime", fasttools and 0 or 0.35},
            {"Ground Slam", "attackTime", fasttools and 0 or 6},
            {"Stomp", "attackTime", fasttools and 0 or 7},
            {"Handstands", "repTime", fasttools and 0 or 1},
            {"Pushups", "repTime", fasttools and 0 or 1},
            {"Weight", "repTime", fasttools and 0 or 1},
            {"Situps", "repTime", fasttools and 0 or 1}
        }
        local player = game.Players.LocalPlayer
        local backpack = player:WaitForChild("Backpack")
        for _, toolInfo in ipairs(defaultSpeeds) do
            local tool = backpack:FindFirstChild(toolInfo[1])
            if tool and tool:FindFirstChild(toolInfo[2]) then
                tool[toolInfo[2]].Value = toolInfo[3]
            end
            local equippedTool = player.Character and player.Character:FindFirstChild(toolInfo[1])
            if equippedTool and equippedTool:FindFirstChild(toolInfo[2]) then
                equippedTool[toolInfo[2]].Value = toolInfo[3]
            end
        end
    end
end)

folder:AddSwitch("Free Autolift pass", function(State)
    freeautoliftgamepass = State -- Use State instead of state
    if freeautoliftgamepass then
        local gamepassFolder = game:GetService("ReplicatedStorage").gamepassIds
        local player = game:GetService("Players").LocalPlayer
        for _, gamepass in pairs(gamepassFolder:GetChildren()) do
            local value = Instance.new("IntValue")
            value.Name = gamepass.Name
            value.Value = gamepass.Value
            value.Parent = player.ownedGamepasses
        end
    end
end)

local folder2 = ThankYou:AddFolder("Auto Lift stuff")

folder2:AddSwitch("Auto Weight", function(State)
    autoweight = State -- Use State instead of state
    if autoweight then
        _G.AutoWeight = autoweight -- Changed Value to autoweight for consistency
        if autoweight then
            local weightTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Weight")
            if weightTool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(weightTool)
            end
        else
            local character = game.Players.LocalPlayer.Character
            local equipped = character:FindFirstChild("Weight")
            if equipped then
                equipped.Parent = game.Players.LocalPlayer.Backpack
            end
        end
        while _G.AutoWeight do
            game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
            task.wait(0.001)
        end
    end
end)

folder2:AddSwitch("Auto Pushups", function(State)
    autopushups = State -- Use State instead of state
    if autopushups then
        _G.AutoPushups = autopushups -- Changed Value to autopushups for consistency
        if autopushups then
            local pushupsTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Pushups")
            if pushupsTool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(pushupsTool)
            end
        else
            local character = game.Players.LocalPlayer.Character
            local equipped = character:FindFirstChild("Pushups")
            if equipped then
                equipped.Parent = game.Players.LocalPlayer.Backpack
            end
        end
        while _G.AutoPushups do
            game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
            task.wait(0.001)
        end
    end
end)

folder2:AddSwitch("Auto Situps", function(State)
    autositups = State -- Use State instead of state
    if autositups then
        _G.AutoSitups = autositups -- Changed Value to autositups for consistency
        if autositups then
            local situpsTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Situps")
            if situpsTool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(situpsTool)
            end
        else
            local character = game.Players.LocalPlayer.Character
            local equipped = character:FindFirstChild("Situps")
            if equipped then
                equipped.Parent = game.Players.LocalPlayer.Backpack
            end
        end
        while _G.AutoSitups do
            game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
            task.wait(0.001)
        end
    end
end)

folder2:AddSwitch("Auto Handstands", function(State)
    autohandstands = State -- Use State instead of state
    if autohandstands then
        _G.AutoHandstands = autohandstands -- Changed Value to autohandstands for consistency
        if autohandstands then
            local handstandsTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Handstands")
            if handstandsTool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(handstandsTool)
            end
        else
            local character = game.Players.LocalPlayer.Character
            local equipped = character:FindFirstChild("Handstands")
            if equipped then
                equipped.Parent = game.Players.LocalPlayer.Backpack
            end
        end
        while _G.AutoHandstands do
            game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
            task.wait(0.001)
        end
    end
end)
