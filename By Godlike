local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "Moons 500K Offer",
    Icon = 0,
    LoadingTitle = "By Godlike",
    LoadingSubtitle = "MoonHub on top",
    Theme = "Serenity",

    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,

    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "Big Hub"
    },

    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },

    KeySystem = false,
    KeySettings = {
        Title = "Untitled",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"Hello"}
    }
})

Rayfield:Notify({
    Title = "Hello Again Carson",
    Content = "Welcome Back my G",
    Duration = 6.5,
    Image = "moon",
})

local TabMain = Window:CreateTab("Main", "circle-check-big")
local TabAutoWeight = Window:CreateTab("Auto Weight", "dumbbell")
local TabAutoRebirth = Window:CreateTab("Auto Rebirth", "box")
local TabAutoKill = Window:CreateTab("Auto Kill", "axe")
local TabOptools = Window:CreateTab("OP Tools", "power")
local TabMisc = Window:CreateTab("Misc", "settings")
local TabLinkedscripts = Window:CreateTab("Linked Scripts", "file")
local TabWhitelisted = Window:CreateTab("Whitelisted users", "lock-keyhole-open")

local Section = TabMain:CreateSection("Misc V1")

-- Add the size slider
local SliderSize = TabMain:CreateSlider({
    Name = "Size Changer",
    Range = {1, 100},
    Increment = 1,
    Suffix = "Size",
    CurrentValue = 2,
    Flag = "Size",
    Callback = function(Value)
        _G.AutoSize = Value
        while _G.AutoSize do
            game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", Value)
            task.wait(0.1)
        end
    end
})

-- Add the speed slider
local SliderSpeed = TabMain:CreateSlider({
    Name = "Speed Changer",
    Range = {14, 100},
    Increment = 1,
    Suffix = "speed",
    CurrentValue = 100,
    Flag = "Speed",
    Callback = function(Value)
        _G.AutoSpeed = Value
        while _G.AutoSpeed do
            if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = _G.AutoSpeed
            end
            task.wait(0.1)
        end
    end,
})

-- Button to give gamepass
local Button = TabMain:CreateButton({
    Name = "FREE AUTO LIFT GAMEPASS!!!",
    Callback = function()
        local gamepassFolder = game:GetService("ReplicatedStorage").gamepassIds
        local player = game:GetService("Players").LocalPlayer
        for _, gamepass in pairs(gamepassFolder:GetChildren()) do
            local value = Instance.new("IntValue")
            value.Name = gamepass.Name
            value.Value = gamepass.Value
            value.Parent = player.ownedGamepasses
        end
    end,
})

-- Create a section for user comments
local Section = TabMain:CreateSection("Tell me what u want added to this tab")

local Section = TabAutoWeight:CreateSection("BASIC AUTO OPTIONS")

local Toggle = TabAutoWeight:CreateToggle({
    Name = "Auto Weight",
    CurrentValue = false,
    Flag = "Auto Weight",
    Callback = function(Value)
        _G.AutoWeight = Value
        if Value then
            local weightTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Weight")
            if weightTool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(weightTool)
            end
            while _G.AutoWeight do
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
                task.wait(0.001)
            end
        else
            local character = game.Players.LocalPlayer.Character
            local equipped = character:FindFirstChild("Weight")
            if equipped then
                equipped.Parent = game.Players.LocalPlayer.Backpack
            end
        end
    end
})

local Toggle = TabAutoWeight:CreateToggle({
    Name = "Auto Pushups",
    CurrentValue = false,
    Flag = "Auto Pushups",
    Callback = function(Value)
        _G.AutoPushups = Value
        if Value then
            local pushupsTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Pushups")
            if pushupsTool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(pushupsTool)
            end
            while _G.AutoPushups do
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
                task.wait(0.001)
            end
        else
            local character = game.Players.LocalPlayer.Character
            local equipped = character:FindFirstChild("Pushups")
            if equipped then
                equipped.Parent = game.Players.LocalPlayer.Backpack
            end
        end
    end
})

local Toggle = TabAutoWeight:CreateToggle({
    Name = "Auto Handstands",
    CurrentValue = false,
    Flag = "Auto Handstands",
    Callback = function(Value)
        _G.AutoHandstands = Value
        if Value then
            local handstandsTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Handstands")
            if handstandsTool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(handstandsTool)
            end
            while _G.AutoHandstands do
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
                task.wait(0.001)
            end
        else
            local character = game.Players.LocalPlayer.Character
            local equipped = character:FindFirstChild("Handstands")
            if equipped then
                equipped.Parent = game.Players.LocalPlayer.Backpack
            end
        end
    end
})

local Toggle = TabAutoWeight:CreateToggle({
    Name = "Auto Situps",
    CurrentValue = false,
    Flag = "Auto Situps",
    Callback = function(Value)
        _G.AutoSitups = Value
        if Value then
            local situpsTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Situps")
            if situpsTool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(situpsTool)
            end
            while _G.AutoSitups do
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
                task.wait(0.001)
            end
        else
            local character = game.Players.LocalPlayer.Character
            local equipped = character:FindFirstChild("Situps")
            if equipped then
                equipped.Parent = game.Players.LocalPlayer.Backpack
            end
        end
    end
})

local Section = TabAutoWeight:CreateSection("Auto Jungle Machines")

local Toggle = TabAutoWeight:CreateToggle({
    Name = "Auto Machines",
    CurrentValue = false,
    Flag = "Auto Machines",
    Callback = function(Value)
        local function pressE()
            local vim = game:GetService("VirtualInputManager")
            vim:SendKeyEvent(true, "E", false, game)
            task.wait(0.1)
            vim:SendKeyEvent(false, "E", false, game)
        end

        local function autoLift()
            while getgenv().working and task.wait() do
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
            end
        end

        local function teleportAndStart(machineName, position)
            if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = position
                task.wait(0.5)
                pressE()
                autoLift()
            end
        end

        local locationsList = {
            "Starter Island",
            "Legend Beach",
            "Frost Gym",
            "Mythical Gym",
            "Eternal Gym",
            "Legend Gym",
            "Muscle King Gym",
            "Jungle Gym"
        }

        local workoutPositions = {
            ["Bench Press"] = {
                ["Starter Island"] = CFrame.new(-17.0609932, 3.31417918, -2.48164988),
                ["Legend Beach"] = CFrame.new(470.334656, 3.31417966, -321.053925),
                ["Frost Gym"] = CFrame.new(-3013.24194, 39.2158546, -335.036926),
                ["Mythical Gym"] = CFrame.new(2371.7356, 39.2158546, 1246.31555),
                ["Eternal Gym"] = CFrame.new(-7176.19141, 45.394104, -1106.31421),
                ["Legend Gym"] = CFrame.new(4111.91748, 1020.46674, -3799.97217),
                ["Muscle King Gym"] = CFrame.new(-8590.06152, 46.0167427, -6043.34717),
                ["Jungle Gym"] = CFrame.new(-8173, 64, 1898)
            },
            ["Squat"] = {
                ["Starter Island"] = CFrame.new(-48.8711243, 3.31417918, -11.8831778),
                ["Legend Beach"] = CFrame.new(470.334656, 3.31417966, -321.053925),
                ["Frost Gym"] = CFrame.new(-2933.47998, 29.6399612, -579.946045),
                ["Mythical Gym"] = CFrame.new(2489.21484, 3.67686629, 849.051025),
                ["Eternal Gym"] = CFrame.new(-7176.19141, 45.394104, -1106.31421),
                ["Legend Gym"] = CFrame.new(4304.99023, 987.829956, -4124.2334),
                ["Muscle King Gym"] = CFrame.new(-8940.12402, 13.1642084, -5699.13477),
                ["Jungle Gym"] = CFrame.new(-8352, 34, 2878)
            },
            ["Deadlift"] = {
                ["Starter Island"] = CFrame.new(-48.8711243, 3.31417918, -11.8831778),
                ["Legend Beach"] = CFrame.new(470.334656, 3.31417966, -321.053925),
                ["Frost Gym"] = CFrame.new(-2933.47998, 29.6399612, -579.946045),
                ["Mythical Gym"] = CFrame.new(2489.21484, 3.67686629, 849.051025),
                ["Eternal Gym"] = CFrame.new(-7176.19141, 45.394104, -1106.31421),
                ["Legend Gym"] = CFrame.new(4304.99023, 987.829956, -4124.2334),
                ["Muscle King Gym"] = CFrame.new(-8940.12402, 13.1642084, -5699.13477)
            },
            ["Pull Up"] = {
                ["Starter Island"] = CFrame.new(-33.3047485, 3.31417918, -11.8831778),
                ["Legend Beach"] = CFrame.new(470.334656, 3.31417966, -321.053925),
                ["Frost Gym"] = CFrame.new(-2933.47998, 29.6399612, -579.946045),
                ["Mythical Gym"] = CFrame.new(2489.21484, 3.67686629, 849.051025),
                ["Eternal Gym"] = CFrame.new(-7176.19141, 45.394104, -1106.31421),
                ["Legend Gym"] = CFrame.new(4304.99023, 987.829956, -4124.2334),
                ["Muscle King Gym"] = CFrame.new(-8940.12402, 13.1642084, -5699.13477),
                ["Jungle Gym"] = CFrame.new(-8666, 34, 2070)
            },
            ["Boulder"] = {
                ["Starter Island"] = CFrame.new(-33.3047485, 3.31417918, -11.8831778),
                ["Legend Beach"] = CFrame.new(470.334656, 3.31417966, -321.053925),
                ["Frost Gym"] = CFrame.new(-2933.47998, 29.6399612, -579.946045),
                ["Mythical Gym"] = CFrame.new(2489.21484, 3.67686629, 849.051025),
                ["Eternal Gym"] = CFrame.new(-7176.19141, 45.394104, -1106.31421),
                ["Legend Gym"] = CFrame.new(4304.99023, 987.829956, -4124.2334),
                ["Muscle King Gym"] = CFrame.new(-8940.12402, 13.1642084, -5699.13477),
                ["Jungle Gym"] = CFrame.new(-8621, 34, 2684)
            }
        }

        local workoutTypes = {
            "Bench Press",
            "Squat",
            "Deadlift",
            "Pull Up",
            "Boulder"
        }

        for _, workoutType in ipairs(workoutTypes) do
            local dropdown = TabAutoWeight:CreateDropdown(workoutType .. " dropdown", {
                Title = "Select " .. workoutType,
                Description = "Choose Your Training Location",
                Values = locationsList,
                Multi = false,
                Default = 1,
                Callback = function(Value)
                    _G["select" .. string.lower(string.gsub(workoutType, " ", ""))] = Value
                end
            })
            local toggle = TabAutoWeight:CreateToggle(workoutType .. " Toggle", {
                Title = "Farm " .. workoutType,
                Description = "Auto Trains " .. workoutType,
                Default = false,
                Callback = function(Value)
                    getgenv().working = Value
                    if Value then
                        local selected = _G["select" .. string.lower(string.gsub(workoutType, " ", ""))]
                        if workoutPositions[workoutType][selected] then
                            teleportAndStart(workoutType, workoutPositions[workoutType][selected])
                        end
                    end
                end
            })
        end
    end
})
