local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "Moons 500K Offer",
    Icon = 0,
    LoadingTitle = "By Godlike",
    LoadingSubtitle = "MoonHub on top",
    Theme = "Serenity",

    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,

    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "Big Hub"
    },

    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },

    KeySystem = false,
    KeySettings = {
        Title = "Untitled",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"Hello"}
    }
})

Rayfield:Notify({
    Title = "Hello Again Carson",
    Content = "Welcome Back my G",
    Duration = 6.5,
    Image = "moon",
})

local TabMain = Window:CreateTab("Main", "circle-check-big")
local TabAutoWeight = Window:CreateTab("Auto Weight", "dumbbell")
local TabAutoRebirth = Window:CreateTab("Auto Rebirth", "box")
local TabAutoKill = Window:CreateTab("Auto Kill", "axe")
local TabOptools = Window:CreateTab("OP Tools", "power")
local TabMisc = Window:CreateTab("Misc", "settings")
local TabLinkedscripts = Window:CreateTab("Linked Scripts", "file")
local TabWhitelisted = Window:CreateTab("Whitelisted users", "lock-keyhole-open")

local Section = TabMain:CreateSection("Misc V1")

-- Add the size slider
local SliderSize = TabMain:CreateSlider({
    Name = "Size Changer",
    Range = {1, 100},
    Increment = 1,
    Suffix = "Size",
    CurrentValue = 2,
    Flag = "Size",
    Callback = function(Value)
        _G.AutoSize = Value
        while _G.AutoSize do
            game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", Value)
            task.wait(0.1)
        end
    end
})

-- Add the speed slider
local SliderSpeed = TabMain:CreateSlider({
    Name = "Speed Changer",
    Range = {14, 100},
    Increment = 1,
    Suffix = "speed",
    CurrentValue = 100,
    Flag = "Speed",
    Callback = function(Value)
        _G.AutoSpeed = Value
        while _G.AutoSpeed do
            if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = _G.AutoSpeed
            end
            task.wait(0.1)
        end
    end,
})

-- Button to give gamepass
local Button = TabMain:CreateButton({
    Name = "FREE AUTO LIFT GAMEPASS!!!",
    Callback = function()
        local gamepassFolder = game:GetService("ReplicatedStorage").gamepassIds
        local player = game:GetService("Players").LocalPlayer
        for _, gamepass in pairs(gamepassFolder:GetChildren()) do
            local value = Instance.new("IntValue")
            value.Name = gamepass.Name
            value.Value = gamepass.Value
            value.Parent = player.ownedGamepasses
        end
    end,
})

-- Create a section for user comments
local Section = TabMain:CreateSection("Tell me what u want added to this tab")

local Section = TabAutoWeight:CreateSection("BASIC AUTO OPTIONS")

local Toggle = TabAutoWeight:CreateToggle({
    Name = "Auto Weight",
    CurrentValue = false,
    Flag = "Auto Weight",
    Callback = function(Value)
        _G.AutoWeight = Value
        if Value then
            local weightTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Weight")
            if weightTool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(weightTool)
            end
            while _G.AutoWeight do
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
                task.wait(0.001)
            end
        else
            local character = game.Players.LocalPlayer.Character
            local equipped = character:FindFirstChild("Weight")
            if equipped then
                equipped.Parent = game.Players.LocalPlayer.Backpack
            end
        end
    end
})

local Toggle = TabAutoWeight:CreateToggle({
    Name = "Auto Pushups",
    CurrentValue = false,
    Flag = "Auto Pushups",
    Callback = function(Value)
        _G.AutoPushups = Value
        if Value then
            local pushupsTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Pushups")
            if pushupsTool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(pushupsTool)
            end
            while _G.AutoPushups do
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
                task.wait(0.001)
            end
        else
            local character = game.Players.LocalPlayer.Character
            local equipped = character:FindFirstChild("Pushups")
            if equipped then
                equipped.Parent = game.Players.LocalPlayer.Backpack
            end
        end
    end
})

local Toggle = TabAutoWeight:CreateToggle({
    Name = "Auto Handstands",
    CurrentValue = false,
    Flag = "Auto Handstands",
    Callback = function(Value)
        _G.AutoHandstands = Value
        if Value then
            local handstandsTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Handstands")
            if handstandsTool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(handstandsTool)
            end
            while _G.AutoHandstands do
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
                task.wait(0.001)
            end
        else
            local character = game.Players.LocalPlayer.Character
            local equipped = character:FindFirstChild("Handstands")
            if equipped then
                equipped.Parent = game.Players.LocalPlayer.Backpack
            end
        end
    end
})

local Toggle = TabAutoWeight:CreateToggle({
    Name = "Auto Situps",
    CurrentValue = false,
    Flag = "Auto Situps",
    Callback = function(Value)
        _G.AutoSitups = Value
        if Value then
            local situpsTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Situps")
            if situpsTool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(situpsTool)
            end
            while _G.AutoSitups do
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
                task.wait(0.001)
            end
        else
            local character = game.Players.LocalPlayer.Character
            local equipped = character:FindFirstChild("Situps")
            if equipped then
                equipped.Parent = game.Players.LocalPlayer.Backpack
            end
        end
    end
})

local Section = TabAutoWeight:CreateSection("Auto Jungle Machines")


local Toggle = TabAutoWeight:CreateToggle({
   Name = "Jungle Gym Bench",
   CurrentValue = false,
   Flag = "JungleBench", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      task.spawn(function()
            while jungleBenchToggle do
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(-8629.88086, 64.8842468, 1855.03467))
                game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer("useMachine", workspace.machinesFolder["Jungle Bench"].interactSeat)
                task.wait(0.1)
            end
        end)
    end
end
})


local Toggle = TabAutoWeight:CreateToggle({
   Name = "Jungle Gym Squat",
   CurrentValue = false,
   Flag = "JungleSquat", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      task.spawn(function()
            while jungleSquatToggle do
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(-8374.25586, 34.5933418, 2932.44995))
                game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer("useMachine", workspace.machinesFolder["Jungle Squat"].interactSeat)
                task.wait(0.1)
            end
        end)
    end
end
})


local Toggle = TabAutoWeight:CreateToggle({
   Name = "Jungle Gym lift",
   CurrentValue = false,
   Flag = "JungleLift", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      task.spawn(function()
            while jungleBarLiftToggle do
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(-8678.05566, 14.5030098, 2089.25977))
                game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer("useMachine", workspace.machinesFolder["Jungle Bar Lift"].interactSeat)
                task.wait(0.1)
            end
        end)
    end
})

local Section = TabAutoWeight:CreateSection("Will add more stuff later")



      
